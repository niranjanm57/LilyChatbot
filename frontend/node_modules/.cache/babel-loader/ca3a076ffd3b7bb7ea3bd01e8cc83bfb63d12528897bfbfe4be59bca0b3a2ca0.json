{"ast":null,"code":"var _jsxFileName = \"/Users/niranjanmali/Desktop/Projects/CookingRecipeChatbot/frontend/src/components/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Chatbot.css\";\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: \"Hello! I am Lily, your cooking assistant! 🍳\",\n    sender: \"bot\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [audio, setAudio] = useState(null);\n  useEffect(() => {\n    if (audio) {\n      audio.play();\n    }\n  }, [audio]);\n  const handleSendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      sender: \"user\"\n    };\n    setMessages(prev => [...prev, userMessage]);\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/get-recipe?name=${encodeURIComponent(input)}`);\n      const data = await response.json();\n      if (data.recipe) {\n        const botMessage = {\n          text: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Here is the recipe for \", data.recipe.title, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"recipe-list\",\n              children: data.recipe.ingredients.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: item\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recipe-steps\",\n              children: data.recipe.steps.map((step, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"recipe-step\",\n                children: [\"Step \", index + 1, \": \", step]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true),\n          sender: \"bot\"\n        };\n        setMessages(prev => [...prev, botMessage]);\n\n        // Play voice response\n        if (data.voice) {\n          setAudio(new Audio(`http://127.0.0.1:5000${data.voice}`));\n        }\n      } else if (data.suggested) {\n        setMessages(prev => [...prev, {\n          text: `Did you mean '${data.suggested}'?`,\n          sender: \"bot\"\n        }]);\n      } else if (data.suggestions) {\n        setMessages(prev => [...prev, {\n          text: `Here are some recipes you can try with those ingredients: ${data.suggestions.join(\", \")}`,\n          sender: \"bot\"\n        }]);\n      } else {\n        setMessages(prev => [...prev, {\n          text: \"Sorry, I couldn't find that recipe. Please try again.\",\n          sender: \"bot\"\n        }]);\n      }\n    } catch (error) {\n      // Fallback to AI query\n      try {\n        const aiResponse = await fetch(\"http://127.0.0.1:5000/ask-ai\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            query: input\n          })\n        });\n        const aiData = await aiResponse.json();\n        setMessages(prev => [...prev, {\n          text: aiData.response,\n          sender: \"bot\"\n        }]);\n      } catch (error) {\n        setMessages(prev => [...prev, {\n          text: \"Error processing request.\",\n          sender: \"bot\"\n        }]);\n      }\n    }\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n        className: msg.sender === \"bot\" ? \"bot-message\" : \"user-message\",\n        initial: {\n          opacity: 0,\n          x: msg.sender === \"bot\" ? -50 : 50\n        },\n        animate: {\n          opacity: 1,\n          x: 0\n        },\n        transition: {\n          duration: 0.3\n        },\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ask me a recipe or give me ingredients...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && handleSendMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"op7JtFbqInUuF9nn81eYvWjXZs8=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","motion","jsxDEV","_jsxDEV","Fragment","_Fragment","Chatbot","_s","messages","setMessages","text","sender","input","setInput","audio","setAudio","play","handleSendMessage","trim","userMessage","prev","response","fetch","encodeURIComponent","data","json","recipe","botMessage","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","ingredients","map","item","index","steps","step","voice","Audio","suggested","suggestions","join","error","aiResponse","method","headers","body","JSON","stringify","query","aiData","msg","div","initial","opacity","x","animate","transition","duration","type","placeholder","value","onChange","e","target","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["/Users/niranjanmali/Desktop/Projects/CookingRecipeChatbot/frontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Chatbot.css\";\nimport { motion } from \"framer-motion\";\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([\n    { text: \"Hello! I am Lily, your cooking assistant! 🍳\", sender: \"bot\" }\n  ]);\n  const [input, setInput] = useState(\"\");\n  const [audio, setAudio] = useState(null);\n\n  useEffect(() => {\n    if (audio) {\n      audio.play();\n    }\n  }, [audio]);\n\n  const handleSendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = { text: input, sender: \"user\" };\n    setMessages((prev) => [...prev, userMessage]);\n\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/get-recipe?name=${encodeURIComponent(input)}`);\n      const data = await response.json();\n\n      if (data.recipe) {\n        const botMessage = {\n          text: (\n            <>\n              <strong>Here is the recipe for {data.recipe.title}:</strong>\n              <ul className=\"recipe-list\">\n                {data.recipe.ingredients.map((item, index) => (\n                  <li key={index}>{item}</li>\n                ))}\n              </ul>\n              <div className=\"recipe-steps\">\n                {data.recipe.steps.map((step, index) => (\n                  <p key={index} className=\"recipe-step\">Step {index + 1}: {step}</p>\n                ))}\n              </div>\n            </>\n          ),\n          sender: \"bot\"\n        };\n        setMessages((prev) => [...prev, botMessage]);\n\n        // Play voice response\n        if (data.voice) {\n          setAudio(new Audio(`http://127.0.0.1:5000${data.voice}`));\n        }\n      } else if (data.suggested) {\n        setMessages((prev) => [...prev, { text: `Did you mean '${data.suggested}'?`, sender: \"bot\" }]);\n      } else if (data.suggestions) {\n        setMessages((prev) => [\n          ...prev,\n          {\n            text: `Here are some recipes you can try with those ingredients: ${data.suggestions.join(\", \")}`,\n            sender: \"bot\"\n          }\n        ]);\n      } else {\n        setMessages((prev) => [...prev, { text: \"Sorry, I couldn't find that recipe. Please try again.\", sender: \"bot\" }]);\n      }\n    } catch (error) {\n      // Fallback to AI query\n      try {\n        const aiResponse = await fetch(\"http://127.0.0.1:5000/ask-ai\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ query: input })\n        });\n        const aiData = await aiResponse.json();\n        setMessages((prev) => [...prev, { text: aiData.response, sender: \"bot\" }]);\n      } catch (error) {\n        setMessages((prev) => [...prev, { text: \"Error processing request.\", sender: \"bot\" }]);\n      }\n    }\n\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-box\">\n        {messages.map((msg, index) => (\n          <motion.div\n            key={index}\n            className={msg.sender === \"bot\" ? \"bot-message\" : \"user-message\"}\n            initial={{ opacity: 0, x: msg.sender === \"bot\" ? -50 : 50 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.3 }}\n          >\n            {msg.text}\n          </motion.div>\n        ))}\n      </div>\n      <div className=\"chat-input\">\n        <input\n          type=\"text\"\n          placeholder=\"Ask me a recipe or give me ingredients...\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyDown={(e) => e.key === \"Enter\" && handleSendMessage()}\n        />\n        <button onClick={handleSendMessage}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}