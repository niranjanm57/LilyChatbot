{"ast":null,"code":"var _jsxFileName = \"/Users/niranjanmali/Desktop/CookingRecipeChatbot/frontend/src/components/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Chatbot.css\";\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: \"Hello! I am Chintu, your cooking assistant! 🍳\",\n    sender: \"bot\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [audio, setAudio] = useState(null);\n  useEffect(() => {\n    if (audio) {\n      audio.play();\n    }\n  }, [audio]);\n  const extractDishName = text => {\n    const commonPhrases = [\"recipe for\", \"make\", \"prepare\", \"cook\", \"Hey Chintu\"];\n    let cleanedText = text.toLowerCase();\n    commonPhrases.forEach(phrase => {\n      cleanedText = cleanedText.replace(phrase, \"\").trim();\n    });\n    return cleanedText.charAt(0).toUpperCase() + cleanedText.slice(1);\n  };\n  const handleSendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      sender: \"user\"\n    };\n    setMessages(prev => [...prev, userMessage]);\n    const dishName = extractDishName(input);\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/get-recipe?name=${encodeURIComponent(dishName)}`);\n      const data = await response.json();\n      if (data.recipe) {\n        const botMessage = {\n          text: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Here is the recipe for \", data.recipe.title, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"recipe-list\",\n              children: data.recipe.ingredients.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: item\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recipe-steps\",\n              children: data.recipe.steps.map((step, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"recipe-step\",\n                children: [\"Step \", index + 1, \": \", step]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true),\n          sender: \"bot\"\n        };\n        setMessages(prev => [...prev, botMessage]);\n\n        // Play voice response\n        if (data.voice) {\n          setAudio(new Audio(`http://127.0.0.1:5000${data.voice}`));\n        }\n      } else if (data.suggested) {\n        setMessages(prev => [...prev, {\n          text: `Did you mean '${data.suggested}'?`,\n          sender: \"bot\"\n        }]);\n      } else {\n        setMessages(prev => [...prev, {\n          text: \"Sorry, I couldn't find that recipe. Please try again.\",\n          sender: \"bot\"\n        }]);\n      }\n    } catch (error) {\n      // Handle OpenAI general queries\n      try {\n        const aiResponse = await fetch(\"http://127.0.0.1:5000/ask-ai\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            query: input\n          })\n        });\n        const aiData = await aiResponse.json();\n        setMessages(prev => [...prev, {\n          text: aiData.response,\n          sender: \"bot\"\n        }]);\n      } catch (error) {\n        setMessages(prev => [...prev, {\n          text: \"Error processing request.\",\n          sender: \"bot\"\n        }]);\n      }\n    }\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n        className: msg.sender === \"bot\" ? \"bot-message\" : \"user-message\",\n        initial: {\n          opacity: 0,\n          x: msg.sender === \"bot\" ? -50 : 50\n        },\n        animate: {\n          opacity: 1,\n          x: 0\n        },\n        transition: {\n          duration: 0.3\n        },\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ask me a recipe or a question...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && handleSendMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"l2xudBEldUK2JuBmDIZbDFdKQh8=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","motion","jsxDEV","_jsxDEV","Fragment","_Fragment","Chatbot","_s","messages","setMessages","text","sender","input","setInput","audio","setAudio","play","extractDishName","commonPhrases","cleanedText","toLowerCase","forEach","phrase","replace","trim","charAt","toUpperCase","slice","handleSendMessage","userMessage","prev","dishName","response","fetch","encodeURIComponent","data","json","recipe","botMessage","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","ingredients","map","item","index","steps","step","voice","Audio","suggested","error","aiResponse","method","headers","body","JSON","stringify","query","aiData","msg","div","initial","opacity","x","animate","transition","duration","type","placeholder","value","onChange","e","target","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["/Users/niranjanmali/Desktop/CookingRecipeChatbot/frontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Chatbot.css\";\nimport { motion } from \"framer-motion\";\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([\n    { text: \"Hello! I am Chintu, your cooking assistant! 🍳\", sender: \"bot\" }\n  ]);\n  const [input, setInput] = useState(\"\");\n  const [audio, setAudio] = useState(null);\n\n  useEffect(() => {\n    if (audio) {\n      audio.play();\n    }\n  }, [audio]);\n\n  const extractDishName = (text) => {\n    const commonPhrases = [\"recipe for\", \"make\", \"prepare\", \"cook\", \"Hey Chintu\"];\n    let cleanedText = text.toLowerCase();\n    \n    commonPhrases.forEach((phrase) => {\n      cleanedText = cleanedText.replace(phrase, \"\").trim();\n    });\n\n    return cleanedText.charAt(0).toUpperCase() + cleanedText.slice(1);\n  };\n\n  const handleSendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = { text: input, sender: \"user\" };\n    setMessages((prev) => [...prev, userMessage]);\n\n    const dishName = extractDishName(input);\n\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/get-recipe?name=${encodeURIComponent(dishName)}`);\n      const data = await response.json();\n\n      if (data.recipe) {\n        const botMessage = {\n          text: (\n            <>\n              <strong>Here is the recipe for {data.recipe.title}:</strong>\n              <ul className=\"recipe-list\">\n                {data.recipe.ingredients.map((item, index) => (\n                  <li key={index}>{item}</li>\n                ))}\n              </ul>\n              <div className=\"recipe-steps\">\n                {data.recipe.steps.map((step, index) => (\n                  <p key={index} className=\"recipe-step\">Step {index + 1}: {step}</p>\n                ))}\n              </div>\n            </>\n          ),\n          sender: \"bot\"\n        };\n        setMessages((prev) => [...prev, botMessage]);\n\n        // Play voice response\n        if (data.voice) {\n          setAudio(new Audio(`http://127.0.0.1:5000${data.voice}`));\n        }\n      } else if (data.suggested) {\n        setMessages((prev) => [...prev, { text: `Did you mean '${data.suggested}'?`, sender: \"bot\" }]);\n      } else {\n        setMessages((prev) => [...prev, { text: \"Sorry, I couldn't find that recipe. Please try again.\", sender: \"bot\" }]);\n      }\n    } catch (error) {\n      // Handle OpenAI general queries\n      try {\n        const aiResponse = await fetch(\"http://127.0.0.1:5000/ask-ai\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ query: input })\n        });\n        const aiData = await aiResponse.json();\n        setMessages((prev) => [...prev, { text: aiData.response, sender: \"bot\" }]);\n      } catch (error) {\n        setMessages((prev) => [...prev, { text: \"Error processing request.\", sender: \"bot\" }]);\n      }\n    }\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-box\">\n        {messages.map((msg, index) => (\n          <motion.div\n            key={index}\n            className={msg.sender === \"bot\" ? \"bot-message\" : \"user-message\"}\n            initial={{ opacity: 0, x: msg.sender === \"bot\" ? -50 : 50 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.3 }}\n          >\n            {msg.text}\n          </motion.div>\n        ))}\n      </div>\n      <div className=\"chat-input\">\n        <input\n          type=\"text\"\n          placeholder=\"Ask me a recipe or a question...\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyDown={(e) => e.key === \"Enter\" && handleSendMessage()}\n        />\n        <button onClick={handleSendMessage}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}