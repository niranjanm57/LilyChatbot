{"ast":null,"code":"var _jsxFileName = \"/Users/niranjanmali/Desktop/Projects/CookingRecipeChatbot/frontend/src/components/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Chatbot.css\";\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: \"Hello! I am Lily, your cooking assistant! 🍳\",\n    sender: \"bot\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [audio, setAudio] = useState(null);\n  useEffect(() => {\n    if (audio) {\n      audio.play();\n    }\n  }, [audio]);\n  const extractDishName = text => {\n    const commonPhrases = [\"recipe for\", \"make\", \"prepare\", \"cook\", \"Hey Lily\"];\n    let cleanedText = text.toLowerCase();\n    commonPhrases.forEach(phrase => {\n      cleanedText = cleanedText.replace(phrase, \"\").trim();\n    });\n    return cleanedText.charAt(0).toUpperCase() + cleanedText.slice(1);\n  };\n  const handleSendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      sender: \"user\"\n    };\n    setMessages(prev => [...prev, userMessage]);\n    const dishName = extractDishName(input);\n    const isIngredients = input.includes(\",\") || input.toLowerCase().includes(\"i have\");\n    try {\n      if (isIngredients) {\n        const response = await fetch(`http://127.0.0.1:5000/search-by-ingredients?ingredients=${encodeURIComponent(input)}`);\n        const data = await response.json();\n        if (data.suggestions && data.suggestions.length > 0) {\n          const botMessage = {\n            text: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Based on your ingredients, try these recipes:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: data.suggestions.map((title, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: title\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true),\n            sender: \"bot\"\n          };\n          setMessages(prev => [...prev, botMessage]);\n        } else {\n          setMessages(prev => [...prev, {\n            text: \"Couldn't find recipes with those ingredients. Try others!\",\n            sender: \"bot\"\n          }]);\n        }\n      } else {\n        const response = await fetch(`http://127.0.0.1:5000/get-recipe?name=${encodeURIComponent(dishName)}`);\n        const data = await response.json();\n        if (data.recipe) {\n          const botMessage = {\n            text: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"Here is the recipe for \", data.recipe.title, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"recipe-list\",\n                children: data.recipe.ingredients.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: item\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"recipe-steps\",\n                children: data.recipe.steps.map((step, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"recipe-step\",\n                  children: [\"Step \", index + 1, \": \", step]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true),\n            sender: \"bot\"\n          };\n          setMessages(prev => [...prev, botMessage]);\n          if (data.voice) {\n            setAudio(new Audio(`http://127.0.0.1:5000${data.voice}`));\n          }\n        } else {\n          setMessages(prev => [...prev, {\n            text: \"Sorry, I couldn't find that recipe. Please try again.\",\n            sender: \"bot\"\n          }]);\n        }\n      }\n    } catch (error) {\n      setMessages(prev => [...prev, {\n        text: \"Error processing request.\",\n        sender: \"bot\"\n      }]);\n    }\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n        className: msg.sender === \"bot\" ? \"bot-message\" : \"user-message\",\n        initial: {\n          opacity: 0,\n          x: msg.sender === \"bot\" ? -50 : 50\n        },\n        animate: {\n          opacity: 1,\n          x: 0\n        },\n        transition: {\n          duration: 0.3\n        },\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ask me a recipe or say what ingredients you have...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && handleSendMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"op7JtFbqInUuF9nn81eYvWjXZs8=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","motion","jsxDEV","_jsxDEV","Fragment","_Fragment","Chatbot","_s","messages","setMessages","text","sender","input","setInput","audio","setAudio","play","extractDishName","commonPhrases","cleanedText","toLowerCase","forEach","phrase","replace","trim","charAt","toUpperCase","slice","handleSendMessage","userMessage","prev","dishName","isIngredients","includes","response","fetch","encodeURIComponent","data","json","suggestions","length","botMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","map","title","index","recipe","className","ingredients","item","steps","step","voice","Audio","error","msg","div","initial","opacity","x","animate","transition","duration","type","placeholder","value","onChange","e","target","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["/Users/niranjanmali/Desktop/Projects/CookingRecipeChatbot/frontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Chatbot.css\";\nimport { motion } from \"framer-motion\";\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([\n    { text: \"Hello! I am Lily, your cooking assistant! 🍳\", sender: \"bot\" }\n  ]);\n  const [input, setInput] = useState(\"\");\n  const [audio, setAudio] = useState(null);\n\n  useEffect(() => {\n    if (audio) {\n      audio.play();\n    }\n  }, [audio]);\n\n  const extractDishName = (text) => {\n    const commonPhrases = [\"recipe for\", \"make\", \"prepare\", \"cook\", \"Hey Lily\"];\n    let cleanedText = text.toLowerCase();\n    commonPhrases.forEach((phrase) => {\n      cleanedText = cleanedText.replace(phrase, \"\").trim();\n    });\n    return cleanedText.charAt(0).toUpperCase() + cleanedText.slice(1);\n  };\n\n  const handleSendMessage = async () => {\n    if (!input.trim()) return;\n\n    const userMessage = { text: input, sender: \"user\" };\n    setMessages((prev) => [...prev, userMessage]);\n\n    const dishName = extractDishName(input);\n    const isIngredients = input.includes(\",\") || input.toLowerCase().includes(\"i have\");\n\n    try {\n      if (isIngredients) {\n        const response = await fetch(`http://127.0.0.1:5000/search-by-ingredients?ingredients=${encodeURIComponent(input)}`);\n        const data = await response.json();\n\n        if (data.suggestions && data.suggestions.length > 0) {\n          const botMessage = {\n            text: (\n              <>\n                <strong>Based on your ingredients, try these recipes:</strong>\n                <ul>\n                  {data.suggestions.map((title, index) => (\n                    <li key={index}>{title}</li>\n                  ))}\n                </ul>\n              </>\n            ),\n            sender: \"bot\"\n          };\n          setMessages((prev) => [...prev, botMessage]);\n        } else {\n          setMessages((prev) => [...prev, { text: \"Couldn't find recipes with those ingredients. Try others!\", sender: \"bot\" }]);\n        }\n      } else {\n        const response = await fetch(`http://127.0.0.1:5000/get-recipe?name=${encodeURIComponent(dishName)}`);\n        const data = await response.json();\n\n        if (data.recipe) {\n          const botMessage = {\n            text: (\n              <>\n                <strong>Here is the recipe for {data.recipe.title}:</strong>\n                <ul className=\"recipe-list\">\n                  {data.recipe.ingredients.map((item, index) => (\n                    <li key={index}>{item}</li>\n                  ))}\n                </ul>\n                <div className=\"recipe-steps\">\n                  {data.recipe.steps.map((step, index) => (\n                    <p key={index} className=\"recipe-step\">Step {index + 1}: {step}</p>\n                  ))}\n                </div>\n              </>\n            ),\n            sender: \"bot\"\n          };\n          setMessages((prev) => [...prev, botMessage]);\n          if (data.voice) {\n            setAudio(new Audio(`http://127.0.0.1:5000${data.voice}`));\n          }\n        } else {\n          setMessages((prev) => [...prev, { text: \"Sorry, I couldn't find that recipe. Please try again.\", sender: \"bot\" }]);\n        }\n      }\n    } catch (error) {\n      setMessages((prev) => [...prev, { text: \"Error processing request.\", sender: \"bot\" }]);\n    }\n\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-box\">\n        {messages.map((msg, index) => (\n          <motion.div\n            key={index}\n            className={msg.sender === \"bot\" ? \"bot-message\" : \"user-message\"}\n            initial={{ opacity: 0, x: msg.sender === \"bot\" ? -50 : 50 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.3 }}\n          >\n            {msg.text}\n          </motion.div>\n        ))}\n      </div>\n      <div className=\"chat-input\">\n        <input\n          type=\"text\"\n          placeholder=\"Ask me a recipe or say what ingredients you have...\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyDown={(e) => e.key === \"Enter\" && handleSendMessage()}\n        />\n        <button onClick={handleSendMessage}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}