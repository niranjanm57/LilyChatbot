{"ast":null,"code":"var _jsxFileName = \"/Users/niranjanmali/Desktop/CookingRecipeChatbot/frontend/src/components/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Chatbot.css\";\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: \"Hello! Ask me for a recipe or any question.\",\n    sender: \"bot\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const handleSendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      sender: \"user\"\n    };\n    setMessages(prev => [...prev, userMessage]);\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/get-recipe?name=${encodeURIComponent(input)}`);\n      const data = await response.json();\n      if (data.recipe) {\n        const formattedRecipe = formatRecipe(data.recipe);\n        setMessages(prev => [...prev, {\n          text: formattedRecipe,\n          sender: \"bot\"\n        }]);\n      } else if (data.suggestion) {\n        setMessages(prev => [...prev, {\n          text: data.suggestion,\n          sender: \"bot\"\n        }]);\n      } else {\n        const openAiResponse = await fetchOpenAiResponse(input);\n        setMessages(prev => [...prev, {\n          text: openAiResponse,\n          sender: \"bot\"\n        }]);\n      }\n    } catch (error) {\n      setMessages(prev => [...prev, {\n        text: \"Error fetching response.\",\n        sender: \"bot\"\n      }]);\n    }\n    setInput(\"\"); // Clear input\n  };\n  const formatRecipe = recipe => {\n    let formattedText = `Here is the recipe for ${recipe.title}:\\n\\n`;\n    formattedText += \"Ingredients:\\n\";\n    formattedText += recipe.ingredients.map(ing => `• ${ing}`).join(\"\\n\");\n    formattedText += \"\\n\\nSteps:\\n\";\n    formattedText += recipe.steps.map((step, i) => `Step ${i + 1}: ${step}`).join(\"\\n\");\n    return formattedText;\n  };\n  const fetchOpenAiResponse = async query => {\n    const response = await fetch(\"http://127.0.0.1:5000/ask-ai\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        question: query\n      })\n    });\n    const data = await response.json();\n    return data.response || \"I'm not sure about that.\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n        className: msg.sender === \"bot\" ? \"bot-message\" : \"user-message\",\n        initial: {\n          opacity: 0,\n          x: msg.sender === \"bot\" ? -50 : 50\n        },\n        animate: {\n          opacity: 1,\n          x: 0\n        },\n        transition: {\n          duration: 0.3\n        },\n        children: msg.text.split(\"\\n\").map((line, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: line\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ask for a recipe or any question...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: e => e.key === \"Enter\" && handleSendMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"bl2IGicYEqAvqCuU/YmPaBI5xWM=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","motion","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","text","sender","input","setInput","handleSendMessage","trim","userMessage","prev","response","fetch","encodeURIComponent","data","json","recipe","formattedRecipe","formatRecipe","suggestion","openAiResponse","fetchOpenAiResponse","error","formattedText","title","ingredients","map","ing","join","steps","step","i","query","method","headers","body","JSON","stringify","question","className","children","msg","index","div","initial","opacity","x","animate","transition","duration","split","line","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onKeyPress","key","onClick","_c","$RefreshReg$"],"sources":["/Users/niranjanmali/Desktop/CookingRecipeChatbot/frontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Chatbot.css\";\nimport { motion } from \"framer-motion\";\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([\n    { text: \"Hello! Ask me for a recipe or any question.\", sender: \"bot\" }\n  ]);\n  const [input, setInput] = useState(\"\");\n\n  const handleSendMessage = async () => {\n    if (!input.trim()) return;\n\n    const userMessage = { text: input, sender: \"user\" };\n    setMessages((prev) => [...prev, userMessage]);\n\n    try {\n      const response = await fetch(\n        `http://127.0.0.1:5000/get-recipe?name=${encodeURIComponent(input)}`\n      );\n      const data = await response.json();\n\n      if (data.recipe) {\n        const formattedRecipe = formatRecipe(data.recipe);\n        setMessages((prev) => [...prev, { text: formattedRecipe, sender: \"bot\" }]);\n      } else if (data.suggestion) {\n        setMessages((prev) => [...prev, { text: data.suggestion, sender: \"bot\" }]);\n      } else {\n        const openAiResponse = await fetchOpenAiResponse(input);\n        setMessages((prev) => [...prev, { text: openAiResponse, sender: \"bot\" }]);\n      }\n    } catch (error) {\n      setMessages((prev) => [...prev, { text: \"Error fetching response.\", sender: \"bot\" }]);\n    }\n\n    setInput(\"\"); // Clear input\n  };\n\n  const formatRecipe = (recipe) => {\n    let formattedText = `Here is the recipe for ${recipe.title}:\\n\\n`;\n    formattedText += \"Ingredients:\\n\";\n    formattedText += recipe.ingredients.map((ing) => `• ${ing}`).join(\"\\n\");\n    formattedText += \"\\n\\nSteps:\\n\";\n    formattedText += recipe.steps.map((step, i) => `Step ${i + 1}: ${step}`).join(\"\\n\");\n    return formattedText;\n  };\n\n  const fetchOpenAiResponse = async (query) => {\n    const response = await fetch(\"http://127.0.0.1:5000/ask-ai\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ question: query })\n    });\n    const data = await response.json();\n    return data.response || \"I'm not sure about that.\";\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-box\">\n        {messages.map((msg, index) => (\n          <motion.div\n            key={index}\n            className={msg.sender === \"bot\" ? \"bot-message\" : \"user-message\"}\n            initial={{ opacity: 0, x: msg.sender === \"bot\" ? -50 : 50 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.3 }}\n          >\n            {msg.text.split(\"\\n\").map((line, i) => (\n              <p key={i}>{line}</p>\n            ))}\n          </motion.div>\n        ))}\n      </div>\n      <div className=\"chat-input\">\n        <input\n          type=\"text\"\n          placeholder=\"Ask for a recipe or any question...\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyPress={(e) => e.key === \"Enter\" && handleSendMessage()}\n        />\n        <button onClick={handleSendMessage}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}